rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ======= الدوال المساعدة =======
    function isSignedIn() {
      return request.auth != null;
    }

    function isUserActive() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isActive == true;
    }

    function userHasCompany(companyId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyIds.hasAny([companyId]);
    }

    function userHasSupplier(supplierId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.supplierIds.hasAny([supplierId]);
    }
    
    function userHasFactory(factoryId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.factoryIds.hasAny([factoryId]);
    }
    
    function userHasAnyCompanyInFactory(factoryId) {
      // تحميل مصفوفة companyIds من المصنع ومقارنتها بمصفوفة الشركة للمستخدم
      return get(/databases/$(database)/documents/factories/$(factoryId))
        .data.companyIds.hasAny(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyIds);
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // ======= تراخيص الاستخدام =======
    match /licenses/{licenseId} {
      allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
      allow create, update: if isSignedIn() && isAdmin();
      allow delete: if isAdmin();
    }
    
    // ======= طلبات الترخيص =======
    match /license_requests/{requestId} {
      allow read: if isSignedIn() && (isAdmin() || resource.data.userId == request.auth.uid);
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      allow update, delete: if isSignedIn() && isAdmin();
    }

    // ======= سجل أنشطة التراخيص =======
    match /license_audit_log/{logId} {
      allow read: if isSignedIn() && isAdmin();
      allow create: if isSignedIn();
    }

    // ======= القاعدة العامة للمجموعات الفرعية تحت الشركات =======
    match /companies/{companyId}/{document=**} {
      allow read, write: if isSignedIn() && isUserActive() && userHasCompany(companyId);
    }

    // ======= المستخدمين =======
    match /users/{userId} {
      allow create: if isSignedIn();

      // السماح بقراءة المستند الخاص أو لأي أدمن
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());

      // السماح بالكتابة (تحديث أو حذف) للمستخدم نفسه أو الأدمن
      allow write: if isSignedIn() && (request.auth.uid == userId || isAdmin());

      // السماح بالتحديث أو الحذف للمستخدم نفسه فقط إذا كان مفعلًا
      allow update, delete: if isSignedIn() && request.auth.uid == userId && isUserActive();

      // إشعارات المستخدمين داخل المستندات الفرعية للمستخدم
      match /notifications/{notificationId} {
        allow create: if isSignedIn() && (request.auth.uid == userId || isAdmin());
        allow read: if isSignedIn() && request.auth.uid == userId;
      }
    }

    // ======= الشركات =======
    match /companies/{companyId} {
      allow create: if isSignedIn() && isUserActive();
      allow read, update, delete: if isSignedIn() && isUserActive() && userHasCompany(companyId);
    }

    // ======= المصانع =======
    match /factories/{factoryId} {
      allow create: if isSignedIn() && isUserActive() && request.resource.data.userId == request.auth.uid;
      
      allow read: if request.auth != null && 
        (
          resource.data.userId == request.auth.uid ||
          resource.data.companyIds.hasAny(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyIds)
        );

      allow update, delete: if isSignedIn() && isUserActive() && resource.data.userId == request.auth.uid;
    }

    // ======= الموردين (vendors) =======
    match /vendors/{supplierId} {
      allow create: if isSignedIn() && isUserActive();
      allow read, update, delete: if isSignedIn() && isUserActive() &&
        (
          resource.data.userId == request.auth.uid ||  // المورد قيد التسجيل من نفس المستخدم
          userHasSupplier(supplierId)
        );
    }

    // ======= الأصناف (items) =======
    match /items/{itemId} {
      allow create: if isSignedIn() && isUserActive() && request.resource.data.userId == request.auth.uid;
			allow read: if isSignedIn() && isUserActive();
      allow update, delete: if isSignedIn() && isUserActive() && resource.data.userId == request.auth.uid;
    }

    // ======= أوامر الشراء =======
    match /purchase_orders/{orderId} {
      allow create, update: if isSignedIn() && isUserActive() && userHasCompany(request.resource.data.companyId);
      allow read: if isSignedIn() && isUserActive(); // يمكنك إضافة شرط userHasCompany(resource.data.companyId) إذا أردت
      allow delete: if isSignedIn() 
        && isUserActive() 
        && userHasCompany(resource.data.companyId)
        && (resource.data.isDelivered != true);
    }

    // ======= المنتجات التامة =======
    match /finished_products/{prodId} {
      allow create: if isSignedIn() && isUserActive() && userHasCompany(request.resource.data.company_id);
      allow read, update, delete: if isSignedIn() && isUserActive() && userHasCompany(resource.data.company_id);
    }


    // ======= أوامر التصنيع =======
    match /manufacturing_orders/{orderId} {
      allow create, read, update, delete: if isSignedIn() && isUserActive() && userHasCompany(request.resource.data.company_id);
    }

    // ======= الحركات المخزنية =======
    match /stock_movements/{moveId} {
      allow create: if isSignedIn() && isUserActive() && userHasCompany(request.resource.data.company_id);
      allow read, update, delete: if isSignedIn() && isUserActive() && userHasCompany(resource.data.company_id);
    }


    // ======= المخزون في المصانع =======
    match /factories/{factoryId}/inventory/{productId} {
      allow create, read, update: if isSignedIn() && isUserActive() && userHasAnyCompanyInFactory(factoryId);
      allow read: if isSignedIn() && isUserActive() && userHasFactory(factoryId);
    }

    // ======= الحركات المخزنية في الشركات =======
    match /companies/{companyId}/stock_movements/{movementId} {
      allow create, read: if isSignedIn() && isUserActive() && userHasCompany(companyId);
      allow read: if isSignedIn() && isUserActive() && userHasCompany(companyId);
    }

  }
}
